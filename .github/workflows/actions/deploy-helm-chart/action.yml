name: 'Deploy Helm Chart'
description: 'Deploy a service to Kubernetes using Helm'

inputs:
  service-name:
    description: 'Name of the service to deploy'
    required: true
  chart-path:
    description: 'Path to the Helm chart'
    required: true
  values-file:
    description: 'Path to the values file'
    required: true
  namespace:
    description: 'Kubernetes namespace'
    required: true
  environment:
    description: 'Deployment environment (dev, staging, prod)'
    required: true
  image-repository:
    description: 'Container image repository'
    required: true
  image-tag:
    description: 'Container image tag'
    required: true
  additional-set-values:
    description: 'Additional --set values for Helm'
    required: false
    default: ''
  timeout:
    description: 'Helm timeout'
    required: false
    default: '10m'

runs:
  using: "composite"
  steps:
    - name: Deploy ${{ inputs.service-name }} Service
      shell: bash
      run: |
        ENV="${{ inputs.environment }}"
        NAMESPACE="${{ inputs.namespace }}"
        
        echo "Deploying ${{ inputs.service-name }} to $NAMESPACE using ${{ inputs.image-repository }}:${{ inputs.image-tag }}..."
        
        # Deploy using Helm
        helm upgrade --install ${{ inputs.service-name }} ${{ inputs.chart-path }} \
          --namespace $NAMESPACE \
          --values ${{ inputs.values-file }} \
          --set image.repository="${{ inputs.image-repository }}" \
          --set image.tag="${{ inputs.image-tag }}" \
          --set image.pullPolicy=Always \
          --set imagePullSecrets[0].name=aws-ecr-creds \
          ${{ inputs.additional-set-values }} \
          --force \
          --timeout ${{ inputs.timeout }} \
          --wait
        
        echo "${{ inputs.service-name }} service deployed with image: ${{ inputs.image-repository }}:${{ inputs.image-tag }}"
    
    - name: Verify deployment
      shell: bash
      run: |
        NAMESPACE="${{ inputs.namespace }}"
        
        echo "Verifying ${{ inputs.service-name }} deployment..."
        
        # Special case for frontend which is a Deployment, not StatefulSet
        if [ "${{ inputs.service-name }}" == "frontend" ]; then
          kubectl rollout status deployment/${{ inputs.service-name }} -n $NAMESPACE --timeout=300s || true
        else
          kubectl rollout status statefulset/${{ inputs.service-name }} -n $NAMESPACE --timeout=300s || true
        fi